    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("loginForm");
        const phoneInput = document.getElementById("phone-number");
        const passwordInput = document.getElementById("password");
        const responseDiv = document.getElementById("response");
        const submitBtn = document.getElementById("submitBtn");
        const togglePassword = document.getElementById("togglePassword");
        const eyeIcon = document.getElementById("eyeIcon");

        let phoneValidationTimeout;
        let passwordValidationTimeout;

        // Toggle password visibility
        togglePassword.addEventListener("click", function () {
            const type = passwordInput.type === "password" ? "text" : "password";
            passwordInput.type = type;
            eyeIcon.className = type === "text" ? "ti ti-eye-off" : "ti ti-eye";
        });

        // Phone number input validation
        phoneInput.addEventListener('input', function () {
            // Remove non-digits and limit to 10 characters
            const phoneValue = this.value.replace(/\D/g, '').substring(0, 10);
            this.value = phoneValue;

            // Clear validation classes while typing
            this.classList.remove('is-valid', 'is-invalid');

            // Clear existing timeout
            clearTimeout(phoneValidationTimeout);

            // Set 800ms delay for validation
            phoneValidationTimeout = setTimeout(() => {
                validatePhoneNumber();
            }, 800);
        });

        // Phone number blur validation
        phoneInput.addEventListener('blur', function () {
            clearTimeout(phoneValidationTimeout);
            validatePhoneNumber();
        });

        function validatePhoneNumber() {
            const phoneValue = phoneInput.value.replace(/\D/g, '');

            if (phoneValue.length === 0) {
                phoneInput.classList.remove('is-valid', 'is-invalid');
            } else if (phoneValue.length === 10) {
                phoneInput.classList.remove('is-invalid');
                phoneInput.classList.add('is-valid');
            } else {
                phoneInput.classList.remove('is-valid');
                phoneInput.classList.add('is-invalid');
            }
        }

        // Password input validation
        passwordInput.addEventListener('input', function () {
            // Clear validation classes while typing
            this.classList.remove('is-valid', 'is-invalid');

            // Clear existing timeout
            clearTimeout(passwordValidationTimeout);

            // Set delay for validation
            passwordValidationTimeout = setTimeout(() => {
                validatePassword();
            }, 300);
        });

        // Password blur validation
        passwordInput.addEventListener('blur', function () {
            clearTimeout(passwordValidationTimeout);
            validatePassword();
        });

        function validatePassword() {
            const password = passwordInput.value;
            const passwordWarning = document.getElementById('password-warning');
            const passwordOk = document.getElementById('password-ok');

            // Password requirements
            const hasLength = password.length >= 8;
            const hasUppercase = /[A-Z]/.test(password);
            const hasLowercase = /[a-z]/.test(password);
            const hasNumber = /\d/.test(password);
            const hasSpecial = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password);
            const isValid = hasLength && hasUppercase && hasLowercase && hasNumber && hasSpecial;

            if (password.length === 0) {
                passwordInput.classList.remove('is-valid', 'is-invalid');
                passwordWarning.style.display = 'none';
                passwordOk.style.display = 'none';
                return;
            }

            if (isValid) {
                passwordInput.classList.remove('is-invalid');
                passwordInput.classList.add('is-valid');
                passwordWarning.style.display = 'none';
                passwordOk.style.display = 'block';
            } else {
                passwordInput.classList.remove('is-valid');
                passwordInput.classList.add('is-invalid');
                passwordWarning.style.display = 'block';
                passwordOk.style.display = 'none';
            }
        }

        function resetRequirementIndicators() {
            // Only hide warning and green feedback
            const passwordWarning = document.getElementById('password-warning');
            const passwordOk = document.getElementById('password-ok');
            passwordWarning.style.display = 'none';
            passwordOk.style.display = 'none';
        }

        function isValidPhone(phone) {
            return /^[0-9]{10}$/.test(phone);
        }

        function isValidPassword(password) {
            return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]).{8,}$/.test(password);
        }

        form.addEventListener("submit", function (e) {
            e.preventDefault();

            const phone = phoneInput.value.trim();
            const password = passwordInput.value.trim();
            responseDiv.textContent = "";

            // Clear any pending timeouts
            clearTimeout(phoneValidationTimeout);
            clearTimeout(passwordValidationTimeout);

            // Force validation on submit
            let isValid = true;

            if (!isValidPhone(phone)) {
                phoneInput.classList.add('is-invalid');
                phoneInput.classList.remove('is-valid');
                responseDiv.textContent = "Invalid phone number. Must be exactly 10 digits.";
                isValid = false;
            } else {
                phoneInput.classList.add('is-valid');
                phoneInput.classList.remove('is-invalid');
            }

            if (!isValidPassword(password)) {
                passwordInput.classList.add('is-invalid');
                passwordInput.classList.remove('is-valid');
                if (isValid) { // Only show if phone is valid
                    responseDiv.textContent = "Password must have 1 uppercase, 1 lowercase, 1 number, 1 special character and be 8+ characters long.";
                }
                isValid = false;
            } else {
                passwordInput.classList.add('is-valid');
                passwordInput.classList.remove('is-invalid');
            }

            if (!isValid) {
                return;
            }

            // Disable button and show spinner
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Logging in...';
            submitBtn.disabled = true;

            fetch("http://127.0.0.1:5000/login", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ Ph_No: phone, Password: password }),
            })
                .then((res) => res.json())
                .then((data) => {
                    responseDiv.classList.remove("text-danger", "text-success");
                    responseDiv.classList.add(data.status === "success" ? "text-success" : "text-danger");
                    responseDiv.textContent = data.message;
                })
                .catch(() => {
                    responseDiv.classList.remove("text-success");
                    responseDiv.classList.add("text-danger");
                    responseDiv.textContent = "An error occurred during login.";
                })
                .finally(() => {
                    submitBtn.innerHTML = "Login";
                    submitBtn.disabled = false;
                });
        });
    });