{% extends 'vertical.html' %}


<!-- top cards connected to backend -->
<!-- report will be updatable but not happening in the backend -->

{% load static %}

{% include 'partials/topbar-station-admin.html' %}
{% include 'partials/sidenav-station-admin.html' %}

{% block page_title %}
{% include 'partials/page-title-station-admin.html' with title="Station Admin Page" %}
{% endblock page_title %}
{% block extra_css %}

<style>
  .gridjs .gridjs-pagination .gridjs-pages button.gridjs-currentPage {
    background-color: #0d6efd !important;
    color: white !important;
    border-color: #0d6efd !important;
  }
</style>
<style>
  /* Fix overlap of Grid.js search icon and input text */
  .gridjs .gridjs-search input {
    padding-left: 2rem !important;
    /* Add spacing between icon and text */
  }

  .gridjs .gridjs-search svg {
    left: 0.6rem !important;
    /* Move icon slightly right */
  }
</style>

<link href="{% static '/vendor/jsvectormap/jsvectormap.min.css' %}" rel="stylesheet" type="text/css">
{% endblock extra_css %}

{% block page_content %}

<div class="container-fluid">
  <div class="row g-4">

    <!-- Finished Report -->
    <div class="col-md-4">
      <div class="card overflow-hidden h-100">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-start">
            <h5 class="text-muted fs-13 text-uppercase">Finished Report</h5>
            <div class="dropdown">
              <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown"
                aria-expanded="false" id="dropdownFinished">
                Sort date
              </button>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" onclick="updateCard('finished', 'This week')">This week</a></li>
                <li><a class="dropdown-item" href="#" onclick="updateCard('finished', 'This month')">This month</a></li>
                <li><a class="dropdown-item" href="#" onclick="updateCard('finished', 'This year')">This year</a></li>
              </ul>
            </div>
          </div>

          <div class="d-flex align-items-center gap-2 my-2 py-1">
            <div class="user-img fs-42 flex-shrink-0">
              <span class="avatar-title text-bg-primary rounded-circle fs-22">
                <iconify-icon icon="solar:case-round-minimalistic-bold-duotone"></iconify-icon>
              </span>
            </div>
            <h3 class="mb-0 fw-bold" id="finished-count">10</h3>
            <iconify-icon icon="solar:cart-2-line-duotone"
              class="ms-auto display-1 position-absolute opacity-25 text-muted widget-icon"></iconify-icon>
            <div class="d-flex justify-content-start align-items-center gap-2 mt-4 position-absolute bottom-0 pb-3 ">
              <span id="finished-percent" class="fw-medium text-danger" style="font-size: 13px;">
                <i class="ti ti-caret-down-filled"></i> 9.19%
              </span>
              <span id="finished-period" class="text-muted" style="font-size: 13px;">
                Since last month
              </span>
            </div>

          </div>
        </div>
      </div>
    </div>

    <!-- Alerts Processed & Alerts Pending -->
    <div class="col-md-4">
      <div class="card overflow-hidden h-100">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-start">
            <h5 class="text-muted fs-13 text-uppercase">Alerts Processed / Alerts Pending</h5>
            <div class="dropdown">
              <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown"
                aria-expanded="false" id="dropdownAlerts">
                Sort date
              </button>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" onclick="updateCard('alerts', 'This week')">This week</a></li>
                <li><a class="dropdown-item" href="#" onclick="updateCard('alerts', 'This month')">This month</a></li>
                <li><a class="dropdown-item" href="#" onclick="updateCard('alerts', 'This year')">This year</a></li>
              </ul>
            </div>
          </div>

          <div class="d-flex align-items-center gap-2 my-2 py-1">
            <div class="user-img fs-42 flex-shrink-0">
              <span class="avatar-title text-bg-primary rounded-circle fs-22">
                <iconify-icon icon="solar:bill-list-bold-duotone"></iconify-icon>
              </span>
            </div>
            <h3 class="mb-0 fw-bold" id="alerts-count-display">40 / 10</h3>
            <iconify-icon icon="solar:banknote-2-line-duotone"
              class="ms-auto display-1 position-absolute opacity-25 text-muted widget-icon"></iconify-icon>
            <div class="d-flex justify-content-start align-items-center gap-2 mt-4 position-absolute bottom-0 pb-3">
              <span id="alerts-percent" class="fw-medium text-danger" style="font-size: 13px;">
                <i class="ti ti-caret-down-filled"></i> 34.19%
              </span>
              <span id="alerts-period" class="text-muted" style="font-size: 13px;">
                Since last month
              </span>
            </div>

          </div>
        </div>
      </div>
    </div>

    <!-- Cases Completed & Initiated -->
    <div class="col-md-4">
      <div class="card overflow-hidden h-100">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-start">
            <h5 class="text-muted fs-13 text-uppercase">Cases Completed / Cases Initiated</h5>
            <div class="dropdown">
              <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown"
                aria-expanded="false" id="dropdownCases">
                Sort date
              </button>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" onclick="updateCard('cases', 'This week')">This week</a></li>
                <li><a class="dropdown-item" href="#" onclick="updateCard('cases', 'This month')">This month</a></li>
                <li><a class="dropdown-item" href="#" onclick="updateCard('cases', 'This year')">This year</a></li>
              </ul>
            </div>
          </div>

          <div class="d-flex align-items-center gap-2 my-2 py-1">
            <div class="user-img fs-42 flex-shrink-0">
              <span class="avatar-title text-bg-primary rounded-circle fs-22">
                <iconify-icon icon="solar:wallet-money-bold-duotone"></iconify-icon>
              </span>
            </div>
            <h3 class="mb-0 fw-bold" id="cases-count">20 / 10</h3>
            <iconify-icon icon="solar:cardholder-line-duotone"
              class="ms-auto display-1 position-absolute opacity-25 text-muted widget-icon"></iconify-icon>
            <div class="d-flex justify-content-start align-items-center gap-2 mt-4 position-absolute bottom-0 pb-3 ">
              <span id="cases-percent" class="fw-medium text-danger" style="font-size: 13px;">
                <i class="ti ti-caret-down-filled"></i> 23.19%
              </span>
              <span id="cases-period" class="text-muted" style="font-size: 13px;">
                Since last month
              </span>
            </div>

          </div>
        </div>
      </div>
    </div>

  </div>

  <!-- Table Section with proper alignment -->
  <div class="row mt-4">
    <div class="col-12">
      <link href="https://unpkg.com/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
      <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>
      <!-- ‚úÖ Table Title -->
      <div class="mb-3">
        <h5 class="fw-bold text-uppercase text-primary"
          style="font-family: 'Inter', 'Segoe UI', sans-serif; letter-spacing: 1.2px; font-size: 1.1rem;">Train Report
          Table</h5>
      </div>

      <div id="table-gridjs"></div>
    </div>
  </div>
</div>



<script>
  <!-- The table rendering logic is handled in the extra_javascript block below. -->



  {% endblock page_content %}

  {% block extra_javascript %}
  <script src="{% static '/vendor/apexcharts/apexcharts.min.js' %}"></script>

<!-- Vector Map Js -->
<script src="{% static '/vendor/jsvectormap/jsvectormap.min.js' %}"></script>
<script src="{% static '/vendor/jsvectormap/maps/world-merc.js' %}"></script>
<script src="{% static '/vendor/jsvectormap/maps/world.js' %}"></script>

<!-- Projects Analytics Dashboard App js -->
<script src="{% static '/js/pages/dashboard.js' %}"></script>

<script>
  async function updateCard(cardType, period) {
    let url = '';
  let field = ''; // Helps to extract count based on time grouping

  // üåê Choose the correct Flask endpoint
  if (cardType === 'finished') {
        if (period === 'This week') {
    url = 'http://127.0.0.1:5000/report-summary/weekly';
  field = 'Week';
        } else if (period === 'This month') {
    url = 'http://127.0.0.1:5000/report-summary/monthly';
  field = 'Month';
        } else {
    url = 'http://127.0.0.1:5000/report-summary/yearly';
  field = 'Year';
        }
      }

  if (cardType === 'alerts') {
    url = 'http://127.0.0.1:5000/reports/week';  // No month/year endpoint in backend right now
      }

  if (cardType === 'cases') {
        if (period === 'This week') {
    url = 'http://127.0.0.1:5000/cases/week';
  field = 'Week';
        } else if (period === 'This month') {
    url = 'http://127.0.0.1:5000/cases/month';
  field = 'Month';
        } else {
    url = 'http://127.0.0.1:5000/cases/year';
  field = 'Year';
        }
      }

  try {
        const res = await fetch(url);
  const json = await res.json();

  if (json.status === 'success') {
          const data = json.data;

  // Filter latest record or first one
  const recent = data[data.length - 1] || { };

  if (cardType === 'finished') {
    document.getElementById('dropdownFinished').textContent = period;
  document.getElementById('finished-count').textContent = recent.Finished_Reports || '0';
  const percentElem = document.getElementById('finished-percent');
  percentElem.innerHTML = '<i class="ti ti-caret-up-filled"></i> +0%'; // Optional: calculate growth
  percentElem.className = 'fw-medium text-success';
  document.getElementById('finished-period').textContent = `For ${field}: ${recent[field] || '-'}`;
          }

  if (cardType === 'alerts') {
    // Count total finished + unfinished reports
    let finished = 0, unfinished = 0;
            data.forEach(entry => {
              if (entry.Report_Status === 'Finished') finished += entry.Total_Reports;
  if (entry.Report_Status === 'Unfinished') unfinished += entry.Total_Reports;
            });

  document.getElementById('dropdownAlerts').textContent = period;
  document.getElementById('alerts-count-display').textContent = `${finished} / ${unfinished}`;
  const percentElem = document.getElementById('alerts-percent');
  percentElem.innerHTML = '<i class="ti ti-caret-up-filled"></i> +0%';
  percentElem.className = 'fw-medium text-success';
  document.getElementById('alerts-period').textContent = `For latest week`;
          }

  if (cardType === 'cases') {
    let closed = 0, open = 0;
            data.forEach(entry => {
              if (entry.Case_Status === 'Closed') closed++;
  if (entry.Case_Status === 'Open') open++;
            });

  document.getElementById('dropdownCases').textContent = period;
  document.getElementById('cases-count').textContent = `${closed} / ${open}`;
  const percentElem = document.getElementById('cases-percent');
  percentElem.innerHTML = '<i class="ti ti-caret-up-filled"></i> +0%';
  percentElem.className = 'fw-medium text-success';
  document.getElementById('cases-period').textContent = `For ${field}: ${recent[field] || '-'}`;
          }

        } else {
          console.error('‚ùå API error:', json.message);
        }
      } catch (err) {
        console.error('üö® Fetch failed:', err);
      }
    }

  // Update notification count based on alerts pending
  function updateNotificationCount() {
      const alertsPending = 10; // Eventually you can fetch this dynamically too

      const alertsCountElement = document.getElementById('alerts-count');
      const notificationAlertsCountElement = document.getElementById('notification-alerts-count');

      if (alertsCountElement) {
        alertsCountElement.textContent = alertsPending;
        alertsCountElement.style.display = alertsPending > 0 ? 'flex' : 'none';
      }

      if (notificationAlertsCountElement) {
        notificationAlertsCountElement.textContent = alertsPending;
      }
    }

  // Run this on page load
  document.addEventListener('DOMContentLoaded', function () {
      updateNotificationCount();

      // Trigger default fetch on load
      updateCard('finished', 'This week');
      updateCard('alerts', 'This week');
      updateCard('cases', 'This week');
    });
</script>

<!-- Grid.js Table Rendering -->
<script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>
<script>
  function loadTrainReportTable() {
    fetch("http://127.0.0.1:5000/train-report/week")
      .then(response => response.json())
      .then(result => {
        if (result.status === "success") {
          const formattedData = result.data.map(row => [
            row.Date || "-",
            row.Train_Status || "-",
            row.Train_Name || "-",
            row.Time || "-",
            row.Remarks || "<i>Click to add</i>",
            "" // checkbox placeholder
          ]);

          new gridjs.Grid({
            columns: [
              {
                name: 'Date',
                width: '100px',
                formatter: cell => gridjs.html('<span class="fw-semibold">' + cell + '</span>')
              },
              { name: 'Status', width: '180px' },
              {
                name: 'Train Name',
                width: '200px',
                formatter: cell => gridjs.html('<a href="#">' + cell + '</a>')
              },
              { name: 'Time', width: '130px' },
              {
                name: 'Remarks',
                width: '180px',
                formatter: (cell) => gridjs.html(`
                  <span style="cursor: pointer;" onclick="handleRemarksInput(this)">
                    ${cell}
                  </span>
                `)
              },
              {
                name: 'Generate a case',
                width: '150px',
                formatter: () => gridjs.html('<input type="checkbox" />')
              }
            ],
            data: formattedData,
            pagination: {
              limit: 5
            },
            sort: true,
            search: true
          }).render(document.getElementById("table-gridjs"));
        } else {
          console.error("Backend error:", result.message);
        }
      })
      .catch(error => {
        console.error("Fetch error:", error);
      });
  }

  // üí¨ Prompt-based inline editing for remarks
  function handleRemarksInput(element) {
    const row = element.closest('tr');
  const cells = row.querySelectorAll('td');

  const date = cells[0].innerText.trim();
  const trainName = cells[2].innerText.trim();
  const currentText = element.innerText === "Click to add" ? "" : element.innerText;

  const input = prompt("Enter remark:", currentText);
  if (input !== null) {
    element.innerText = input;

  // Send updated remark to backend üõ†Ô∏è
  fetch("http://127.0.0.1:5000/update-remark", {
    method: "POST",
  headers: {
    "Content-Type": "application/json"
        },
  body: JSON.stringify({
    Date: date,
  Train_Name: trainName,
  Remarks: input
        })
      })
        .then(res => res.json())
        .then(data => {
          if (data.status === "success") {
    console.log("‚úÖ Remark saved");
          } else {
    alert("‚ö†Ô∏è Failed to save remark: " + data.message);
          }
        })
        .catch(err => {
    console.error("‚ùå Error:", err);
        });
    }
  }


  // Call on page load
  document.addEventListener("DOMContentLoaded", function () {
    loadTrainReportTable();
  });
</script>

{% endblock extra_javascript %}